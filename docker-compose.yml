version: "3.8"

networks:
    imagine-network:
        driver: bridge

volumes:
    imagine-db:
    pgadmin-data:
    seq-data:

services:
    imagine_todo_api:
        image: ${DOCKER_REGISTRY-}imaginetodoapi
        build:
            context: ./taskify_api
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        networks:
            - imagine-network
            
    imagine-database:
        container_name: imagine.database
        image: postgres:14.1-alpine
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - "5432:5432"
        networks:
            - imagine-network
        volumes:
            - imagine-db:/var/lib/postgresql/data

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        networks:
            - imagine-network
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@imagine.net
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - "5050:80"
            
    imagine.seq:
        container_name: imagine.seq
        image: datalust/seq:latest
        networks:
          - imagine-network
        environment:
          - ACCEPT_EULA=Y
        ports:
          - "5341:5341"
          - "8081:80"
        volumes:
          - seq-data:/data
          
    imagine_todo_ui:
        image: ${DOCKER_REGISTRY-}imaginetodoui
        build:
            context: ./Taskify_ui
            dockerfile: Dockerfile
        ports:
            - "4200:80"
        networks:
            - imagine-network
     
    mssql:
        image: mcr.microsoft.com/mssql/server
        networks:
            - imagine-network
        ports:
            - "1433:1433"
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=Password!23
            - MSSQL_PID=Developer

    mssqlscripts:
        image: mcr.microsoft.com/mssql/server
        depends_on:
            - mssql
        command: /bin/bash -c 'until /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P "Password!23" -Q "create database Keycloak"; do sleep 5; done'

    keycloak:
        image: quay.io/keycloak/keycloak
        networks:
            - imagine-network
        ports:
          - "9080:9080"
        environment:
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
        command: 
          - start-dev 
          - --db=dev-mem
          - --hostname=host.docker.internal
          - --http-port=9080